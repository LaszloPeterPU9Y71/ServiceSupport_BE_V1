/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.service.support.servicesupport_be_v1.web.api;

import com.service.support.servicesupport_be_v1.web.model.WorksheetNote;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-10-31T20:50:27.221031900+01:00[Europe/Budapest]")
@Validated
@Tag(name = "worksheet_note", description = "the worksheet_note API")
public interface WorksheetNoteApi {

    /**
     * POST /worksheets/{id}/notes : Megjegyzés hozzáadása munkalaphoz
     *
     * @param id  (required)
     * @param worksheetNote  (required)
     * @return Létrehozott megjegyzés (status code 201)
     */
    @Operation(
        operationId = "createNote",
        summary = "Megjegyzés hozzáadása munkalaphoz",
        tags = { "worksheet_note" },
        responses = {
            @ApiResponse(responseCode = "201", description = "Létrehozott megjegyzés", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = WorksheetNote.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/worksheets/{id}/notes",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    ResponseEntity<WorksheetNote> createNote(
        @Parameter(name = "id", description = "", required = true, in = ParameterIn.PATH) @PathVariable("id") Integer id,
        @Parameter(name = "WorksheetNote", description = "", required = true) @Valid @RequestBody WorksheetNote worksheetNote
    );


    /**
     * GET /worksheets/{id}/notes : Megjegyzések lekérdezése egy munkalaphoz
     *
     * @param id  (required)
     * @return Megjegyzések listája (status code 200)
     */
    @Operation(
        operationId = "getNotesByWorksheetId",
        summary = "Megjegyzések lekérdezése egy munkalaphoz",
        tags = { "worksheet_note" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Megjegyzések listája", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = WorksheetNote.class)))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/worksheets/{id}/notes",
        produces = { "application/json" }
    )
    
    ResponseEntity<List<WorksheetNote>> getNotesByWorksheetId(
        @Parameter(name = "id", description = "", required = true, in = ParameterIn.PATH) @PathVariable("id") Integer id
    );

}
