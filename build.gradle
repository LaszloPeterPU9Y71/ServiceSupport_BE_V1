plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id("org.openapi.generator") version "7.3.0"
}


group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'ServiceSupport_BE_V1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(24)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Csak DataSource + Liquibase (JPA még NEM)
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.liquibase:liquibase-core'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Teszt (maradhat)
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation("org.springframework.boot:spring-boot-starter-web")
    developmentOnly("org.springframework.boot:spring-boot-devtools") // automatikus újratöltés
    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0")

    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
    implementation 'org.glassfish:jakarta.el:4.0.2' // Expression Language támogatás a validatorhoz

    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'

    implementation("org.mapstruct:mapstruct:1.5.5.Final")
    annotationProcessor("org.mapstruct:mapstruct-processor:1.5.5.Final")

    // Ha Lombok is van:
    compileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")

    implementation("org.springframework.boot:spring-boot-starter-data-jpa")

    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("io.jsonwebtoken:jjwt-api:0.11.5")
    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
    runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.5")

    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    implementation 'org.springframework.boot:spring-boot-starter-mail'

}

tasks.named('test') {
    useJUnitPlatform()
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/src/main/resources/openapi/openapi.yaml"
    outputDir = "$buildDir/openapi-generated"

    apiPackage = "com.service.support.servicesupport_be_v1.web.api"
    modelPackage = "com.service.support.servicesupport_be_v1.web.model"
    invokerPackage = "com.service.support.servicesupport_be_v1.web.invoker"

    configOptions = [
            interfaceOnly          : "true",
            useTags                : "true",
            dateLibrary            : "java8",
            skipDefaultInterface   : "true",
            generateSupportingFiles: "false",
            generateApiTests       : "false",
            generateModelTests     : "false",
            "useJakartaEe"         : "false",
            "useSpringBoot3"       : "true"
    ]
}

tasks.named('openApiGenerate') {
    doFirst {
        delete "$buildDir/openapi-generated"
    }
    outputs.upToDateWhen { false } // mindig generáljon újra
    finalizedBy 'copyGeneratedApi'
}

tasks.register('copyGeneratedApi', Copy) {
    dependsOn 'openApiGenerate' // ⚠️ ez a lényeg
    from "$buildDir/openapi-generated/src/main/java/com/service/support/servicesupport_be_v1/web"
    into "$projectDir/src/main/java/com/service/support/servicesupport_be_v1/web"
    include 'api/**', 'model/**'
}

tasks.named('compileJava') {
    dependsOn 'copyGeneratedApi' // build előtt mindig generáljon + másoljon
}

